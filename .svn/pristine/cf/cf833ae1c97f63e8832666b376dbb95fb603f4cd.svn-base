package cn.edu.tsinghua.thss.tsmart.modeling.bip.models;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.eclipse.ui.views.properties.IPropertyDescriptor;
import org.eclipse.ui.views.properties.TextPropertyDescriptor;

public class DataModel extends ListDataModel<DataAreaModel> {
    private String             type  = "";
    private String             value = "";
    public final static String TYPE  = "DataType";
    public final static String VALUE = "DataValue";

    @Override
    public IPropertyDescriptor[] getPropertyDescriptors() {
        return new IPropertyDescriptor[] {new TextPropertyDescriptor(VALUE, "initial value"),
                        new TextPropertyDescriptor(NAME, "name"),
                        new TextPropertyDescriptor(TYPE, "type"),};
    }

    public Object getPropertyValue(Object id) {
        if (TYPE.equals(id))
            return getType();
        else if (NAME.equals(id))
            return getName();
        else if (VALUE.equals(id)) return getValue();
        return null;
    }

    public boolean isPropertySet(Object id) {
        return TYPE.equals(id) || NAME.equals(id) || VALUE.equals(id);
    }

    public void resetPropertyValue(Object id) {}

    public void setPropertyValue(Object id, Object value) {
        if (TYPE.equals(id))
            setType((String) value);
        else if (NAME.equals(id))
            setName((String) value);
        else if (VALUE.equals(id)) setValue((String) value);
    }

    @Override
    public String toString() {
        if (value == null || value.trim().isEmpty())
            return String.format("%s %s;", type, getName());
        return String.format(" %s %s = %s;", type, getName(), value);
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
        firePropertyChange(TYPE, null, type);
        if (getParent() != null) getParent().childUpdated(this);
        notifyRegisterObjects();
    }

    public boolean nameExistsInParent(String name) {
        if (getParent() == null) return false;
        for (DataModel child : getParent().getChildren()) {
            if (!child.equals(this) && child.getName().equals(name)) {
                return true;
            }
        }
        return false;
    }

    public void setName(String name) {
        if (nameExistsInParent(name)) {
            return;
        }
        super.setName(name);
        firePropertyChange(NAME, null, name);
        if (getParent() != null) getParent().childUpdated(this);
        notifyRegisterObjects();
    }

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
        firePropertyChange(VALUE, null, value);
        if (getParent() != null) getParent().childUpdated(this);
        notifyRegisterObjects();
    }

    // 从字符串中解析出type，name，value
    public boolean setProperties(String s) {
        String pattern = "(.*) (.*)=(.*);";
        Pattern transitionPattern = Pattern.compile(pattern);
        Matcher m = transitionPattern.matcher(s);
        if (m.matches()) {
            this.setType(m.group(1).trim());
            this.setName(m.group(2).trim());
            this.setValue(m.group(3).trim());
            System.out.println(this.toString());
            return true;
        }
        return false;
    }

    @Override
    public Element toXML() {
        Element element = DocumentHelper.createElement("data");
        element.addAttribute("type", getType());
        element.addAttribute("name", getName());
        if (value != null) {
            element.addAttribute("value", getValue());
        }
        return element;
    }

    @Override
    public String toBIP() {
        if (value == null) {
            return String.format("%s %s;", getType(), getName());
        }
        return String.format("%s %s = %s;", getType(), getName(), getValue());
    }

    @Override
    public BaseModel fromXML() {
        // TODO Auto-generated method stub
        return null;
    }
}
