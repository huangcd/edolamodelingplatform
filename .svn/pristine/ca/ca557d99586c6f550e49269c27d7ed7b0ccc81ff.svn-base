package cn.edu.tsinghua.thss.tsmart.modeling.bip.parts;

import java.beans.PropertyChangeEvent;
import java.util.List;

import org.eclipse.draw2d.ChopboxAnchor;
import org.eclipse.draw2d.ColorConstants;
import org.eclipse.draw2d.ConnectionAnchor;
import org.eclipse.draw2d.Ellipse;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.Label;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.gef.ConnectionEditPart;
import org.eclipse.gef.EditPolicy;
import org.eclipse.gef.NodeEditPart;
import org.eclipse.gef.Request;

import cn.edu.tsinghua.thss.tsmart.modeling.bip.models.BulletModel;
import cn.edu.tsinghua.thss.tsmart.modeling.bip.models.ConnectorPortModel;
import cn.edu.tsinghua.thss.tsmart.modeling.bip.policies.ConnectorPortEditPolicy;


public class BulletEditPart extends BaseGraphicalEditPart implements NodeEditPart {
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (BulletModel.CONSTRAINT.equals(evt.getPropertyName())) {
            figure.setToolTip(new Label(((BulletModel) getModel()).getOwner().toString()));
            refreshVisuals();
        } else if (BulletModel.TARGET_CONNECTION.equals(evt.getPropertyName())) {
            refreshTargetConnections();
        } else {
            figure.setToolTip(new Label(((BulletModel) getModel()).getOwner().toString()));
            refreshVisuals();
        }
    }



    @Override
    protected List<ConnectorPortModel> getModelTargetConnections() {
        return ((BulletModel) getModel()).getTargetConnections();
    }



    @Override
    protected IFigure createFigure() {
        Ellipse figure = new Ellipse();
        figure.setForegroundColor(ColorConstants.black);
        figure.setBackgroundColor(ColorConstants.black);
        figure.setToolTip(new Label(((BulletModel) getModel()).getOwner().toString()));
        figure.setFill(true);
        return figure;
    }

    @Override
    protected void createEditPolicies() {
        installEditPolicy(EditPolicy.GRAPHICAL_NODE_ROLE, new ConnectorPortEditPolicy());
    }

    @Override
    protected void refreshVisuals() {
        Rectangle constraint = ((BulletModel) getModel()).getPositionConstraint();
        ((BaseGraphicalEditPart) getParent()).setLayoutConstraint(this, getFigure(), constraint);
    }

    @Override
    public ConnectionAnchor getSourceConnectionAnchor(ConnectionEditPart connection) {
        return null;
    }

    @Override
    public ConnectionAnchor getTargetConnectionAnchor(ConnectionEditPart connection) {
        return new ChopboxAnchor(getFigure());
    }

    @Override
    public ConnectionAnchor getSourceConnectionAnchor(Request request) {
        return null;
    }

    @Override
    public ConnectionAnchor getTargetConnectionAnchor(Request request) {
        return new ChopboxAnchor(getFigure());
    }
}
