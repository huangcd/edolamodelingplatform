package cn.edu.tsinghua.thss.tsmart.modeling.bip.commands;

import org.eclipse.gef.commands.Command;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;

import cn.edu.tsinghua.thss.tsmart.modeling.bip.models.AtomicTypeModel;
import cn.edu.tsinghua.thss.tsmart.modeling.bip.models.PlaceModel;
import cn.edu.tsinghua.thss.tsmart.modeling.bip.models.PortModel;
import cn.edu.tsinghua.thss.tsmart.modeling.bip.models.TransitionModel;
import cn.edu.tsinghua.thss.tsmart.modeling.ui.dialog.EditTransitionDialog;


/**
 * 
 * @author: huangcd (huangcd.thu@gmail.com)
 * @time: 2011-6-26 ÏÂÎç09:37:06
 * @project: CereusBip
 * @package: cereusbip.commands
 * @class: CreateTransitionCommand.java
 * 
 */
public class CreateTransitionCommand extends Command {
    private AtomicTypeModel parent;
    private PlaceModel      source;
    private PlaceModel      target;
    private String          guard;
    private String          action;
    private PortModel       port;
    private TransitionModel connection;

    public PlaceModel getSource() {
        return source;
    }

    @Override
    public boolean canExecute() {
        if (source == null || target == null) return false;
        return true;
    }

    @Override
    public void execute() {
        connection.attachSource();
        connection.attachTarget();
        Shell shell = Display.getDefault().getActiveShell();
        if (shell != null) {
            EditTransitionDialog dialog = new EditTransitionDialog(shell, connection, parent);
            dialog.setBlockOnOpen(true);
            dialog.open();
        }
    }

    @Override
    public void undo() {
        connection.detachSource();
        connection.detachTarget();
    }

    public void setSource(PlaceModel source) {
        this.source = source;
        if (connection != null) {
            connection.setSource(this.source);
        } else {
            System.err.println("connection is null");
        }
    }

    public void setTarget(PlaceModel target) {
        this.target = target;
        if (connection != null) {
            connection.setTarget(this.target);
        } else {
            System.err.println("connection is null");
        }
    }

    public void setConnection(TransitionModel connection) {
        this.connection = connection;
    }

    public void setParent(AtomicTypeModel parent) {
        this.parent = parent;
        if (connection != null) {
            connection.setParent(this.parent);
        } else {
            System.err.println("connection is null");
        }
    }

    public void setGuard(String guard) {
        this.guard = guard;
        if (connection != null) {
            connection.setGuard(this.guard);
        } else {
            System.err.println("connection is null");
        }
    }

    public void setAction(String action) {
        this.action = action;
        if (connection != null) {
            connection.setAction(this.action);
        } else {
            System.err.println("connection is null");
        }
    }

    public void setPort(PortModel port) {
        this.port = port;
        if (connection != null) {
            connection.setPort(this.port);
        } else {
            System.err.println("connection is null");
        }
    }
}
